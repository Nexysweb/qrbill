{"version":3,"sources":["layout.tsx","lib/convert.ts","lib/convert.data.ts","ui/convert.tsx","lib/validate.ts","ui/validate.tsx","ui/qr-reader.tsx","lib/qr/extra.tsx","lib/qr/qr.tsx","lib/qr/cross.tsx","lib/qr/index.tsx","ui/form.tsx","ui/qr-writer.tsx","ui/index.tsx","router.tsx","serviceWorker.js","index.tsx"],"names":["style","borderTop","borderBottom","boxShadow","title","prefix","menus","name","link","Layout","props","header","className","to","map","menu","i","key","Fragment","children","Header","QRType","Version","Coding","addressToBreakSepFormat","a","labels","k","_","ToBreakSepFormat","arrayToAddress","t","idx","r","AdrTp","Name","StrNameOrAdrLine1","StrNameOrAdrLine2","PstCd","TmwNm","Ctry","checkIfNull","Object","keys","reduce","b","arrayToJson","IBAN","Cdtr","Error","CdtrInf","UltmtCdtr","UltmtDtr","CcyAmt","Ccy","Amt","AddInf","Ustrd","Trailer","StrdBkgInf","RmtInf","Tp","Ref","AltPmtInf","AltPmt1","AltPmt2","sample","split","sampleJson","undefined","Ui","useState","text","form","handleChange","onSubmit","e","preventDefault","convert","Convert","Textarea","onChange","v","value","type","JSON","stringify","sAddress","Joi","object","string","regex","max","unknown","vCdtrInf","vHeader","valid","vCcyAmt","vRmtInf","optional","vAltPmtInf","allow","validate","o","schema","presence","validateBoolean","error","href","Validate","parse","result","setResult","handleScan","data","arr","j","console","log","handleError","err","delay","onError","onScan","width","debitorText","d","addressText","ExtraInformation","size","qr","position","left","top","Qr","config","fgColor","bgColor","level","renderAs","includeMargin","radius","margin","x","y","height","fill","SwissQr","withExtraInfo","iban","RmtInf2","altPmtToBreakSepFormat","concat","join","Form","UI","InputWrapper","errors","Utils","get","Wrapper","label","Input","placeholder","QRBillForm","initial","changeForm","f","set","onRefresh","setData","checked","setChecked","onClick","Icon","NotFound","withRouter","exact","path","component","Main","QrReader","Boolean","window","location","hostname","match","history","History","basename","process","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b122e5b6.chunk.js","sourcesContent":["import React from \"react\";\n\nimport { Link } from \"react-router-dom\";\n\nconst style = {\n  borderTop: \"1px solid #e5e5e5\",\n  borderBottom: \"1px solid #e5e5e5\",\n  boxShadow: \"0 .25rem .75rem rgba(0, 0, 0, .05)\",\n};\n\nconst title = \"Swiss QR Bill\";\n\nconst prefix = \"\"; // process.env.PUBLIC_URL || '';\n\nconst menus = [\n  { name: \"QR Reader\", link: \"/qr/read\" },\n  { name: \"QR Writer\", link: \"/qr/write\" },\n  { name: \"Convert\", link: \"/convert\" },\n  { name: \"Validate\", link: \"/validate\" },\n];\n\n/*.map(x => {\n  x.link = prefix + x.link;\n\n  return x;\n})*/\n\nfunction Layout(props: any) {\n  const header = (\n    <header>\n      <div\n        style={style}\n        className=\"d-flex flex-column flex-md-row align-items-center p-3 px-md-4 mb-3 bg-white\"\n      >\n        <h5 className=\"my-0 mr-md-auto font-weight-normal\">\n          <Link to={prefix + \"/\"}>{title}</Link>\n        </h5>\n        <nav className=\"my-2 my-md-0 mr-md-3\">\n          {menus.map((menu, i) => (\n            <Link className=\"p-2 text-dark\" key={i} to={menu.link}>\n              {menu.name}\n            </Link>\n          ))}\n        </nav>\n      </div>\n    </header>\n  );\n\n  return (\n    <React.Fragment>\n      {header}\n      <div className=\"container\">{props.children}</div>\n    </React.Fragment>\n  );\n}\nexport default Layout;\n","import * as T from \"./type\";\n\nexport const Header = {\n  QRType: \"SPC\", // swiss payment code\n  Version: \"0200\",\n  Coding: \"1\",\n};\n\nexport const createJson = (\n  CdtrInf: T.CdtrInfo,\n  CcyAmt: T.CcyAmt,\n  RmtInf: T.RmtInf,\n  UltmtDtr?: T.Address,\n  UltmtCdtr?: T.Address,\n  AltPmtInf?: T.AltPmtInf\n): T.QR => {\n  return {\n    Header,\n    CdtrInf,\n    CcyAmt,\n    RmtInf,\n    UltmtCdtr,\n    UltmtDtr,\n    AltPmtInf,\n  };\n};\n\nconst ToBreakSepFormat = <A extends { [k: string]: string }>(\n  labels: (keyof A)[],\n  a?: A\n): string[] => {\n  if (!a || a === null) {\n    return labels.map((_) => \"\");\n  }\n\n  return labels.map((k: keyof A) => a[k]);\n};\n\nexport const addressToBreakSepFormat = (a?: T.Address): string[] => {\n  const addressLabels: (keyof T.Address)[] = [\n    \"AdrTp\",\n    \"Name\",\n    \"StrNameOrAdrLine1\",\n    \"StrNameOrAdrLine2\",\n    \"PstCd\",\n    \"TmwNm\",\n    \"Ctry\",\n  ];\n\n  return ToBreakSepFormat<T.Address>(addressLabels, a);\n};\n\nconst altPmtToBreakSepFormat = (a?: T.AltPmtInf): string[] => {\n  const labels: (keyof T.AltPmtInf)[] = [\"AltPmt1\", \"AltPmt2\"];\n\n  if (!a || a === null) {\n    return labels.map((_) => \"\");\n  }\n\n  return labels.map((k) => a[k]);\n};\n\nexport const jsonToBreakSepFormat = (j: T.QR) => {\n  const Header = ([\"QRType\", \"Version\", \"Coding\"] as (keyof T.Header)[]).map(\n    (k) => j[\"Header\"][k]\n  );\n  const iban = j[\"CdtrInf\"][\"IBAN\"];\n  const Cdtr: string[] = addressToBreakSepFormat(j.CdtrInf.Cdtr);\n  const UltmtCdtr: string[] = addressToBreakSepFormat(j.UltmtCdtr);\n  const UltmtDtr: string[] = addressToBreakSepFormat(j.UltmtDtr);\n  const CcyAmt: string[] = ([\"Amt\", \"Ccy\"] as (keyof T.CcyAmt)[]).map(\n    (k) => j.CcyAmt[k]\n  );\n\n  const RmtInf: string[] = [j.RmtInf.Tp, j.RmtInf.Ref];\n\n  const RmtInf2: string[] = [\"Ustrd\", \"Trailer\", \"StrdBkgInf\"].map(\n    (k: keyof T.RmtInfAddInfo) => j.RmtInf.AddInf[k]\n  );\n  const AltPmtInf = altPmtToBreakSepFormat(j.AltPmtInf);\n\n  return Header.concat(iban)\n    .concat(Cdtr)\n    .concat(UltmtCdtr)\n    .concat(CcyAmt)\n    .concat(UltmtDtr)\n    .concat(RmtInf)\n    .concat(RmtInf2)\n    .concat(AltPmtInf);\n};\n\nexport const arrayToAddress = (t: string[], idx = 0): T.Address | undefined => {\n  const r: T.Address = {\n    AdrTp: t[idx],\n    Name: t[idx + 1],\n    StrNameOrAdrLine1: t[idx + 2],\n    StrNameOrAdrLine2: t[idx + 3],\n    PstCd: t[idx + 4],\n    TmwNm: t[idx + 5],\n    Ctry: t[idx + 6],\n  };\n\n  const checkIfNull = Object.keys(r)\n    .map((k) => r[k] === \"\")\n    .reduce((a, b) => a && b);\n\n  if (checkIfNull === true) {\n    return undefined;\n  }\n\n  return r;\n};\n\nexport const arrayToJson = (t: string[]): T.QR => {\n  const IBAN = t[3];\n  const Cdtr = arrayToAddress(t, 4);\n\n  if (!Cdtr) {\n    throw Error(\"cdtr is undefined\");\n  }\n\n  const CdtrInf = { IBAN, Cdtr };\n  const UltmtCdtr = arrayToAddress(t, 11);\n  const UltmtDtr = arrayToAddress(t, 20);\n  const CcyAmt = { Ccy: t[19], Amt: t[18] };\n  const AddInf = { Ustrd: t[29], Trailer: t[30], StrdBkgInf: t[31] };\n  const RmtInf = { Tp: t[27], Ref: t[28], AddInf };\n  const AltPmtInf = { AltPmt1: t[32], AltPmt2: t[33] };\n\n  return {\n    Header,\n    CdtrInf,\n    UltmtCdtr,\n    UltmtDtr,\n    CcyAmt,\n    RmtInf,\n    AltPmtInf,\n  };\n};\n","import { Header } from \"./convert\";\nimport * as T from \"./type\";\n\nconst sampleAddress: string = `S\nRobert Schneider AG\nRue du Lac\n1268\n2501\nBiel\nCH`;\n\nexport const sampleAddressArray: string[] = sampleAddress.split(\"\\n\");\n\nexport const sampleAddressJson: T.Address = {\n  AdrTp: \"S\",\n  Name: \"Robert Schneider AG\",\n  StrNameOrAdrLine1: \"Rue du Lac\",\n  StrNameOrAdrLine2: \"1268\",\n  PstCd: \"2501\",\n  TmwNm: \"Biel\",\n  Ctry: \"CH\",\n};\n\nexport const sample: string = `SPC\n0200\n1\nCH4431999123000889012\nS\nRobert Schneider AG\nRue du Lac\n1268\n2501\nBiel\nCH\n\n\n\n\n\n\n\n1949.75\nCHF\nS\nPia-Maria Rutschmann-Schnyder\nGrosse Marktgasse\n28\n9400\nRorschach\nCH\nQRR\n210000000003139471430009017\nOrder of 15 June 2020\nEPD\n//S1/10/10201409/11/200701/20/140.000-53/30/102673831/31/200615/32/7.7/33/7.7:139.40/40/0:30\nName AV1: UV;UltraPay005;12345\nName AV2: XY;XYService;54321`;\n\nexport const sampleArray: string[] = sample.split(\"\\n\");\n\nconst Cdtr: T.Address = {\n  AdrTp: \"S\",\n  Name: \"Robert Schneider AG\",\n  StrNameOrAdrLine1: \"Rue du Lac\",\n  StrNameOrAdrLine2: \"1268\",\n  PstCd: \"2501\",\n  TmwNm: \"Biel\",\n  Ctry: \"CH\",\n};\n\nconst UltmtCdtr = undefined;\n\nconst UltmtDtr: T.Address = {\n  AdrTp: \"S\",\n  Ctry: \"CH\",\n  Name: \"Pia-Maria Rutschmann-Schnyder\",\n  PstCd: \"9400\",\n  StrNameOrAdrLine1: \"Grosse Marktgasse\",\n  StrNameOrAdrLine2: \"28\",\n  TmwNm: \"Rorschach\",\n};\n\nconst RmtInf: T.RmtInf = {\n  AddInf: {\n    StrdBkgInf:\n      \"//S1/10/10201409/11/200701/20/140.000-53/30/102673831/31/200615/32/7.7/33/7.7:139.40/40/0:30\",\n    Trailer: \"EPD\",\n    Ustrd: \"Order of 15 June 2020\",\n  },\n  Ref: \"210000000003139471430009017\",\n  Tp: \"QRR\",\n};\n\nconst AltPmtInf: T.AltPmtInf = {\n  AltPmt1: \"Name AV1: UV;UltraPay005;12345\",\n  AltPmt2: \"Name AV2: XY;XYService;54321\",\n};\n\nconst CcyAmt: T.CcyAmt = {\n  Amt: \"1949.75\",\n  Ccy: \"CHF\",\n};\n\nconst CdtrInf: T.CdtrInfo = {\n  IBAN: \"CH4431999123000889012\",\n  Cdtr,\n};\n\nexport const sampleJson: T.QR = {\n  Header,\n  CdtrInf,\n  CcyAmt,\n  UltmtDtr,\n  UltmtCdtr,\n  RmtInf,\n  AltPmtInf,\n};\n","import React, { useState } from \"react\";\n\nimport * as UI from \"@nexys/uibs4\";\nimport * as Convert from \"../lib/convert\";\nimport { sample } from \"../lib/convert.data\";\n\nfunction Ui() {\n  const [form, handleChange] = useState<any>({ text: sample });\n\n  const handleSubmit = (e: any) => {\n    e.preventDefault();\n\n    const convert = Convert.arrayToJson(form.text.split(\"\\n\"));\n\n    handleChange({ ...form, convert });\n  };\n\n  return (\n    <div>\n      <h3>Converts output (break line separated text) into JSON</h3>\n      <div className=\"row\">\n        <div className=\"col-md-6\">\n          <form onSubmit={handleSubmit}>\n            <UI.Form.Textarea\n              onChange={(v: any) => handleChange({ ...form, text: v.value })}\n              name=\"text\"\n              value={form.text}\n            />\n            <button type=\"submit\" className=\"btn btn-primary\">\n              Convert\n            </button>\n          </form>\n        </div>\n        <div className=\"col-md-6\">\n          <pre>{JSON.stringify(form.convert, null, 2)}</pre>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Ui;\n","import Joi from \"@hapi/joi\";\nimport * as T from \"./type\";\n\n// the different defitions are taken from https://www.paymentstandards.ch/dam/downloads/ig-qr-bill-en.pdf#page=25\n\n// note1: even though the standards describes a \"break-line\" separated format. I think it is best to represent it as a json with the structure they suggest in the `Data Structure` of the Doc so that the validation becomes easier\n// note2: the following groups: UltmtCdtr, UltmtDbtr and CdtrInf:Cdtr are the same (this is not explicitly stated in the documentation)\n// note3: this is a first version and is not complete, PR welcome!\n\nexport const sAddress = Joi.object<T.Address>({\n  AdrTp: Joi.string().regex(/^[SK]$/),\n  Ctry: Joi.string().regex(/^[A-Z]{2}$/),\n  Name: Joi.string().max(70),\n  PstCd: Joi.string().max(16),\n  StrNameOrAdrLine1: Joi.string().max(70),\n  StrNameOrAdrLine2: Joi.string().max(70),\n  TmwNm: Joi.string().max(35),\n}).unknown(true);\n\nexport const vCdtrInf = Joi.object<T.CdtrInfo>({\n  IBAN: Joi.string().regex(\n    /(?:CH|LI)[0-9]{2}[a-zA-Z0-9]{4}[0-9]{7}([a-zA-Z0-9]?){0,16}/\n  ),\n  Cdtr: sAddress,\n});\n\nexport const vHeader = Joi.object<T.Header>({\n  QRType: Joi.string().valid(\"SPC\"),\n  Version: Joi.string()\n    .regex(/^\\d{4}$/)\n    .valid(\"0200\"), //, only check for version 0200\n  Coding: Joi.string().regex(/^1$/),\n});\n\nexport const vCcyAmt = Joi.object<T.CcyAmt>({\n  Amt: Joi.string().regex(/^\\d+\\.\\d{2}$/),\n  Ccy: Joi.string().regex(/(?:CHF|EUR)/), //.regex(/^[A-Z]{3}$/),\n});\n\nexport const vRmtInf = Joi.object<T.RmtInf>({\n  AddInf: Joi.object({\n    StrdBkgInf: Joi.string().optional().max(140),\n    Trailer: Joi.string().valid(\"EPD\"),\n    Ustrd: Joi.string().optional().max(140),\n  }),\n\n  Tp: Joi.string().valid(\"QRR\").valid(\"SCOR\").valid(\"NON\"),\n  Ref: Joi.string().optional(), // this is however dependent\n});\n\nexport const vAltPmtInf = Joi.object<T.AltPmtInf>({\n  AltPmt1: Joi.string().optional().max(100),\n  AltPmt2: Joi.string().optional().max(100),\n});\n\nexport const sampleJson = Joi.object<T.QR>({\n  Header: vHeader,\n  CdtrInf: vCdtrInf,\n  CcyAmt: vCcyAmt,\n  UltmtDtr: sAddress.allow(null).optional(),\n  UltmtCdtr: sAddress.allow(null).optional(),\n  RmtInf: vRmtInf,\n  AltPmtInf: vAltPmtInf,\n});\n\n/**\n * validates the schema\n * @param  schema : schema\n * @param  o : object to be validated\n * @return Joi output\n */\nexport const validate = (\n  o: any,\n  schema: Joi.Schema = sampleJson\n): Joi.ValidationResult => schema.validate(o, { presence: \"required\" });\n\n/**\n * validates the schema\n * @param  schema : schema\n * @param  o : object to be validated\n * @return boolean\n */\nexport const validateBoolean = (\n  o: any,\n  schema: Joi.Schema = sampleJson\n): boolean => !validate(o, schema).error;\n","import React, { useState } from \"react\";\n\nimport * as UI from \"@nexys/uibs4\";\nimport * as Validate from \"../lib/validate\";\nimport { sampleJson } from \"../lib/convert.data\";\n\nfunction Ui() {\n  const [form, handleChange] = useState<any>({\n    text: JSON.stringify(sampleJson, null, 2),\n  });\n\n  const handleSubmit = (e: any) => {\n    e.preventDefault();\n\n    const validate = Validate.validate(JSON.parse(form.text));\n\n    handleChange({ ...form, validate });\n  };\n\n  return (\n    <div>\n      <h3>Validate JSON with JOI</h3>\n      <p>\n        see source{\" \"}\n        <a href=\"https://github.com/Nexysweb/qrbill/blob/master/src/lib/validate.js\">\n          here\n        </a>\n      </p>\n      <div className=\"row\">\n        <div className=\"col-md-6\">\n          <form onSubmit={handleSubmit}>\n            <UI.Form.Textarea\n              onChange={(v: any) => handleChange({ ...form, text: v.value })}\n              name=\"text\"\n              value={form.text}\n            />\n            <button type=\"submit\" className=\"btn btn-primary\">\n              Validate\n            </button>\n          </form>\n        </div>\n        <div className=\"col-md-6\">\n          <h4>Output of JOI after validating</h4>\n          <pre>{JSON.stringify(form.validate, null, 2)}</pre>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Ui;\n","import React, { useState } from \"react\";\nimport QrReader from \"react-qr-reader\";\n\nimport * as Validate from \"../lib/validate\";\nimport { arrayToJson } from \"../lib/convert\";\nimport * as T from \"../lib/type\";\n\nexport default () => {\n  //const [show, setShow] = useState<boolean>(true);\n  const [result, setResult] = useState<any>(\"no result\");\n\n  const show = true;\n\n  const handleScan = (data: any) => {\n    if (data) {\n      const arr = data.split(\"\\n\");\n      const j: T.QR = arrayToJson(arr);\n\n      console.log(j);\n\n      if (Validate.validateBoolean(j)) {\n        setResult(j);\n      } else {\n        setResult(\"The QR Code read is not a valid Swiss QRBIll\");\n      }\n    }\n  };\n\n  const handleError = (err: any) => {\n    console.error(err);\n  };\n\n  const renderReader = () => {\n    if (show) {\n      return (\n        <QrReader\n          delay={300}\n          onError={handleError}\n          onScan={handleScan}\n          style={{ width: \"300px\" }}\n        />\n      );\n    }\n\n    return null;\n  };\n\n  /*const toggleReader = () => {\n    setShow(!show);\n  };*/\n\n  return (\n    <div>\n      {renderReader()}\n      <pre>{JSON.stringify(result, null, 2)}</pre>\n    </div>\n  );\n};\n","import React from \"react\";\n\nimport * as T from \"../type\";\n\nconst ExtraInformation = (props: { size: number; qr: T.QR }) => {\n  const sep = 17;\n  const { size, qr } = props;\n  return (\n    <>\n      <div style={{ position: \"absolute\" }}>\n        <p>\n          <b>Currency</b>\n          <br />\n          {qr.CcyAmt.Ccy}\n        </p>\n      </div>\n\n      <div style={{ position: \"absolute\", left: 100 }}>\n        <p>\n          <b>Amount</b>\n          <br />\n          {qr.CcyAmt.Amt}\n        </p>\n      </div>\n\n      <div style={{ position: \"absolute\", left: size + sep, top: 0 - 5 }}>\n        <p>\n          <b>Account/Payable to</b>\n          <br />\n          {qr.CdtrInf.IBAN}\n          {addressText(qr.CdtrInf.Cdtr)}\n        </p>\n\n        <p>\n          <b>Reference</b>\n          <br />\n          {qr.RmtInf.Ref}\n        </p>\n\n        {/*<p>\n          <b>Additional Information</b>\n          <br />\n          00 0000\n        </p>*/}\n\n        {debitorText(qr.UltmtDtr)}\n      </div>\n    </>\n  );\n};\n\nconst debitorText = (d?: T.Address) => {\n  if (!d) {\n    return null;\n  }\n\n  return (\n    <p>\n      <b>Payable By</b>\n      {addressText(d)}\n    </p>\n  );\n};\n\nconst addressText = (d: T.Address) => {\n  return (\n    <>\n      <br />\n      {d.Name}\n      <br />\n      {d.StrNameOrAdrLine1} {d.StrNameOrAdrLine2}\n      <br />\n      {d.TmwNm}\n    </>\n  );\n};\n\nexport default ExtraInformation;\n","import React from \"react\";\n\nimport QRCode from \"qrcode.react\";\nimport { Config } from \"./type\";\n\nconst Qr = (props: { value: string; size: number }) => {\n  const { value, size } = props;\n\n  const config: Config = {\n    fgColor: \"#000000\",\n    bgColor: \"#ffffff\",\n    level: \"M\",\n    renderAs: \"svg\",\n    includeMargin: false,\n  };\n\n  return (\n    <QRCode\n      value={value}\n      size={size}\n      fgColor={config.fgColor}\n      bgColor={config.bgColor}\n      level={config.level}\n      renderAs={config.renderAs}\n      includeMargin={config.includeMargin}\n    />\n  );\n};\n\nexport default Qr;\n","import React from \"react\";\n\nexport default (props: { size: number }) => {\n  const { size } = props;\n  const radius = (size / 46) * 7;\n  const ratioCross = 1.1 / 5;\n\n  return (\n    <>\n      <svg\n        style={{\n          margin: \"0 auto\",\n          position: \"absolute\",\n          top: 150 - radius + \"px\",\n          left: 150 - radius + \"px\",\n        }}\n      >\n        <rect\n          x={radius / 2 - (1 / 10) * radius}\n          y={radius / 2 - (1 / 10) * radius}\n          width={radius * 1.2}\n          height={radius * 1.2}\n          r={radius}\n          fill=\"white\"\n        />\n        <rect\n          x={radius / 2}\n          y={radius / 2}\n          width={radius}\n          height={radius}\n          r={radius}\n          fill=\"black\"\n        />\n        <rect\n          x={radius / 2 + radius / 2 - (ratioCross / 2) * radius}\n          y={radius / 2 + (ratioCross / 2) * radius}\n          width={ratioCross * radius}\n          height={(1 - ratioCross) * radius}\n          fill=\"white\"\n        />\n        <rect\n          x={radius / 2 + (ratioCross / 2) * radius}\n          y={radius / 2 + radius / 2 - (ratioCross / 2) * radius}\n          width={(1 - ratioCross) * radius}\n          height={ratioCross * radius}\n          fill=\"white\"\n        />\n      </svg>\n    </>\n  );\n};\n","import React from \"react\";\n\nimport * as T from \"../type\";\nimport * as Convert from \"../convert\";\nimport * as Validate from \"../validate\";\n\nimport ExtraInformation from \"./extra\";\nimport Qr from \"./qr\";\nimport Cross from \"./cross\";\n\n// swiss qr code should be 46 x 46 mm and the cross 7 x 7 mmm in the middle\n\n// this is a quick wrapper around the qrcode generator for the generation f qqr code with JSON cntent\nconst SwissQr = (props: { qr: T.QR; withExtraInfo?: boolean }) => {\n  const { qr, withExtraInfo = false } = props;\n\n  const s = Validate.validateBoolean(qr);\n\n  if (!s) {\n    return (\n      <p>\n        <i>Invalid Input</i>\n      </p>\n    );\n  }\n\n  const value = Convert.jsonToBreakSepFormat(qr);\n\n  const size = 300;\n\n  return (\n    <div style={{ position: \"relative\" }}>\n      <Qr value={value.join(\"\\n\")} size={size} />\n      <Cross size={size} />\n      {withExtraInfo ? <ExtraInformation qr={qr} size={size} /> : null}\n    </div>\n  );\n};\n\nexport default SwissQr;\n","import React, { useState } from \"react\";\nimport * as UI from \"@nexys/uibs4\";\nimport * as Utils from \"@nexys/utils\";\nimport * as T from \"../lib/type\";\n\nconst { Form } = UI;\n\n// helper to display wrapper and input in one component\nconst InputWrapper = (props: any) => {\n  // for now, no error management\n  const { name, onChange, form, errors = {} } = props;\n\n  const value = Utils.ds.get(name, form);\n\n  return (\n    <Form.Wrapper name={name} errors={errors} label={name}>\n      <Form.Input\n        name={name}\n        onChange={onChange}\n        placeholder={name}\n        value={value}\n      />\n    </Form.Wrapper>\n  );\n};\n\nfunction QRBillForm(props: { initial: any; onRefresh: (qr: T.QR) => void }) {\n  const [form, changeForm] = useState(props.initial || {});\n\n  const handleChange = (v: any) => {\n    const f = Utils.ds.set(v.name, v.value, form);\n\n    changeForm(f);\n    props.onRefresh(form);\n  };\n\n  const handleSubmit = (e: any) => {\n    e.preventDefault();\n\n    props.onRefresh(form);\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <h5>CdtrInf</h5>\n\n      <InputWrapper name=\"CdtrInf.IBAN\" form={form} onChange={handleChange} />\n      <InputWrapper\n        name=\"CdtrInf.Cdtr.AdrTp\"\n        form={form}\n        onChange={handleChange}\n      />\n      <InputWrapper\n        name=\"CdtrInf.Cdtr.Name\"\n        form={form}\n        onChange={handleChange}\n      />\n      <InputWrapper\n        name=\"CdtrInf.Cdtr.StrNameOrAdrLine1\"\n        form={form}\n        onChange={handleChange}\n      />\n      <InputWrapper\n        name=\"CdtrInf.Cdtr.StrNameOrAdrLine2\"\n        form={form}\n        onChange={handleChange}\n      />\n      <InputWrapper\n        name=\"CdtrInf.Cdtr.PstCd\"\n        form={form}\n        onChange={handleChange}\n      />\n      <InputWrapper\n        name=\"CdtrInf.Cdtr.TmwNm\"\n        form={form}\n        onChange={handleChange}\n      />\n      <InputWrapper\n        name=\"CdtrInf.Cdtr.Ctry\"\n        form={form}\n        onChange={handleChange}\n      />\n\n      <h5>CcyAmt</h5>\n      <InputWrapper name=\"CcyAmt.Amt\" form={form} onChange={handleChange} />\n      <InputWrapper name=\"CcyAmt.Ccy\" form={form} onChange={handleChange} />\n\n      <h5>UltmtCdtr</h5>\n      <InputWrapper\n        name=\"UltmtCdtr.AdrTp\"\n        form={form}\n        onChange={handleChange}\n      />\n      <InputWrapper name=\"UltmtCdtr.Name\" form={form} onChange={handleChange} />\n      <InputWrapper\n        name=\"UltmtCdtr.StrNameOrAdrLine1\"\n        form={form}\n        onChange={handleChange}\n      />\n      <InputWrapper\n        name=\"UltmtCdtr.StrNameOrAdrLine2\"\n        form={form}\n        onChange={handleChange}\n      />\n      <InputWrapper\n        name=\"UltmtCdtr.PstCd\"\n        form={form}\n        onChange={handleChange}\n      />\n      <InputWrapper\n        name=\"UltmtCdtr.TmwNm\"\n        form={form}\n        onChange={handleChange}\n      />\n      <InputWrapper name=\"UltmtCdtr.Ctry\" form={form} onChange={handleChange} />\n\n      <h5>UltmtDbtr</h5>\n      <InputWrapper name=\"UltmtDtr.AdrTp\" form={form} onChange={handleChange} />\n      <InputWrapper name=\"UltmtDtr.Name\" form={form} onChange={handleChange} />\n      <InputWrapper\n        name=\"UltmtDtr.StrNameOrAdrLine1\"\n        form={form}\n        onChange={handleChange}\n      />\n      <InputWrapper\n        name=\"UltmtDtr.StrNameOrAdrLine2\"\n        form={form}\n        onChange={handleChange}\n      />\n      <InputWrapper name=\"UltmtDtr.PstCd\" form={form} onChange={handleChange} />\n      <InputWrapper name=\"UltmtDtr.TmwNm\" form={form} onChange={handleChange} />\n      <InputWrapper name=\"UltmtDtr.Ctry\" form={form} onChange={handleChange} />\n\n      <h5>RmtInf</h5>\n      <InputWrapper name=\"RmtInf.Tp\" form={form} onChange={handleChange} />\n      <InputWrapper name=\"RmtInf.Ref\" form={form} onChange={handleChange} />\n      <InputWrapper\n        name=\"RmtInf.AddInf.Ustrd\"\n        form={form}\n        onChange={handleChange}\n      />\n      <InputWrapper\n        name=\"RmtInf.AddInf.Trailer\"\n        form={form}\n        onChange={handleChange}\n      />\n      <InputWrapper\n        name=\"RmtInf.AddInf.StrdBkgInf\"\n        form={form}\n        onChange={handleChange}\n      />\n\n      <h5>AltPmtInf</h5>\n      <InputWrapper\n        name=\"AltPmtInf.AltPmt1\"\n        form={form}\n        onChange={handleChange}\n      />\n      <InputWrapper\n        name=\"AltPmtInf.AltPmt2\"\n        form={form}\n        onChange={handleChange}\n      />\n\n      <button type=\"submit\" className=\"btn btn-primary\">\n        Generate\n      </button>\n    </form>\n  );\n}\n\nexport default QRBillForm;\n","import React, { useState } from \"react\";\n\nimport QR from \"../lib/qr\";\nimport { sampleJson } from \"../lib/convert.data\";\nimport * as T from \"../lib/type\";\n\nimport Form from \"./form\";\n\nconst SwissQr = () => {\n  const [data, setData] = useState<T.QR>(sampleJson);\n  const [checked, setChecked] = useState<boolean>(false);\n\n  const refreshQr = (x: T.QR) => {\n    setData({ ...x });\n  };\n\n  return (\n    <div className=\"row\">\n      <div className=\"col-md-6\">\n        <h3>Generated Swiss QR</h3>\n        <QR qr={data} withExtraInfo={checked} />\n      </div>\n      <div className=\"col-md-3\">\n        <p>\n          <input\n            type=\"checkbox\"\n            checked={checked}\n            onClick={() => setChecked(!checked)}\n          />{\" \"}\n          with extra information\n        </p>\n        <Form initial={sampleJson} onRefresh={refreshQr} />\n      </div>\n      <div className=\"col-md-3\">\n        <h3>\n          QR Content <small>as JSON</small>\n        </h3>\n        <pre>{JSON.stringify(data, null, 2)}</pre>\n      </div>\n    </div>\n  );\n};\n\nexport default SwissQr;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport * as UI from '@nexys/uibs4';\n\nexport default () => (<div>\n  <p>Here you can play with different tools to understand the Swiss QR Bill</p>\n  <p><b><Link to={'/qr/read'}>Click here</Link> if you would like to read a Swiss QR Code</b></p>\n\n  <p>Browse the menu for more options</p>\n\n  <p>Do you need help with the transition to the new <a href=\"https://www.six-group.com/interbank-clearing/en/home/standardization/payment-slips.html\">QR Bill</a> and in general <a href=\"https://www.six-group.com/interbank-clearing/en/home/standardization/iso-payments.html\">ISO20022</a>? Please get in touch at <a href=\"info@nexys.ch\">info [@] nexys.ch</a></p>\n\n  <p><a href=\"https://github.com/Nexysweb/qrbill\"><UI.Components.Icon name=\"code\"/> Source</a> available under MIT license. Contributions are welcome.</p>\n\n</div>);","import React from \"react\";\nimport { Switch, Route, withRouter } from \"react-router-dom\";\n\nimport Layout from \"./layout\";\n\nimport Convert from \"./ui/convert\";\nimport Validate from \"./ui/validate\";\nimport QrReader from \"./ui/qr-reader\";\nimport QrWriter from \"./ui/qr-writer\";\nimport Main from \"./ui\";\n\n//import { dataLabels } from \".//lib/data-examples\";\n\nconst NotFound = () => <p>Page Not Found</p>;\n\nfunction Router(props: any) {\n  //\n  return (\n    <Layout>\n      <Switch>\n        <Route exact path={\"/\"} component={Main} />\n        <Route exact path=\"/qr/read\" component={QrReader} props={props} />\n        <Route\n          exact\n          path={\"/qr/write\"}\n          component={() => <QrWriter />}\n          props={props}\n        />\n        <Route exact path={\"/convert\"} component={Convert} props={props} />\n        <Route exact path={\"/validate\"} component={Validate} props={props} />\n        <Route path=\"/\" component={NotFound} />\n      </Switch>\n    </Layout>\n  );\n}\n\nexport default withRouter(Router);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Router } from 'react-router-dom';\nimport * as History from 'history';\n\nimport RouterApp from './router';\nimport * as serviceWorker from './serviceWorker';\n\nconst history = History.createBrowserHistory({\n  basename: process.env.PUBLIC_URL || '',\n});\n\nReactDOM.render(<Router history={history}><RouterApp/></Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}