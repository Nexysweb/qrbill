{"version":3,"sources":["layout.js","ui/convert.js","ui/validate.js","lib/validate.js","lib/convert.js","ui/qr-reader.js","lib/qr.js","lib/data-examples.js","ui/qr-writer.js","router.js","serviceWorker.js","index.js"],"names":["style","borderTop","borderBottom","boxShadow","title","menus","name","link","Layout","props","header","className","to","map","menu","i","key","Fragment","children","Ui","sAddress","Joi","object","AdrTp","string","regex","Ctry","Name","PstCd","StrNameOrAdrLine1","StrNameOrAdrLine2","TmwNm","unknown","vCdtrInf","IBAN","Cdtr","vHeader","QRType","valid","Version","Coding","vCcyAmt","Amt","Ccy","vRmtInf","AddInf","SrdBkgInfo","optional","Trailer","Ustrd","Ref","Tp","vAltPmtInf","AltPmt1","AltPmt2","sampleJson","Header","CdtrInf","CcyAmt","UltmtDtr","allow","UltmtCdtr","RmtInf","AltPmtInf","validate","schema","o","s","presence","console","log","error","arrayToAddress","t","idx","r","checkIfNull","Object","keys","k","reduce","a","b","arrayToJson","Test","handleScan","data","arr","split","j","Validate","setState","result","handleError","err","state","show","this","delay","onError","onScan","width","renderReader","JSON","stringify","Component","SwissQr","value","Array","isArray","length","config","radius","position","join","size","fgColor","bgColor","level","renderAs","includeMargin","margin","top","left","x","y","height","fill","dataLabels","NotFound","Main","href","withRouter","path","component","QrReader","Convert","exact","Boolean","window","location","hostname","match","history","History","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.041c0985.chunk.js","sourcesContent":["import React from 'react';\n\nimport { Link } from 'react-router-dom';\n\nconst style = {\n  borderTop: '1px solid #e5e5e5',\n  borderBottom: '1px solid #e5e5e5',\n  boxShadow: '0 .25rem .75rem rgba(0, 0, 0, .05)'\n}\n\nconst title = 'Swiss QR Bill';\n\nconst menus = [ \n  {name: 'QR Reader', link: '/qr/read'},\n  {name: 'QR Writer', link: '/qr/write'},\n  {name: 'Convert', link: '/convert'},\n  {name: 'Validate', link: '/validate'},\n]\n\n\nfunction Layout(props) {\n  const header = (<header>\n    <div style={style} className=\"d-flex flex-column flex-md-row align-items-center p-3 px-md-4 mb-3 bg-white\">\n    <h5 className=\"my-0 mr-md-auto font-weight-normal\"><Link to=\"/\">{title}</Link></h5>\n    <nav className=\"my-2 my-md-0 mr-md-3\">\n    {menus.map((menu,i) => <Link className=\"p-2 text-dark\" key={i} to={menu.link}>{menu.name}</Link>)}\n    </nav>\n  </div>\n  </header>);\n\n  return (<React.Fragment>{header}<div className=\"container\">{props.children}</div></React.Fragment>);\n}\nexport default Layout;","import React from 'react';\n\nfunction Ui() {\n  return (<p>converts output (break line separated text) into JSON</p>)\n}\n\nexport default Ui;","import React from 'react';\n\nfunction Ui() {\n  return (<p>Display textarea where the json can be pasted and checked</p>)\n}\n\nexport default Ui;","import Joi from '@hapi/joi';\n\nexport const sAddress = Joi.object({\n  AdrTp: Joi.string().regex(/^[ST]$/),\n  Ctry: Joi.string().regex(/^\\w{2}$/),\n  Name: Joi.string(),\n  PstCd: Joi.string(),\n  StrNameOrAdrLine1: Joi.string(),\n  StrNameOrAdrLine2: Joi.string(),\n  TmwNm: Joi.string()\n}).unknown(true);\n\nexport const vCdtrInf = Joi.object({\n  IBAN: Joi.string().regex(/[a-zA-Z]{2}[0-9]{2}[a-zA-Z0-9]{4}[0-9]{7}([a-zA-Z0-9]?){0,16}/),\n  Cdtr: sAddress\n});\n\nexport const vHeader = Joi.object({\n  QRType: Joi.string().valid('SPC'),\n  Version: Joi.string().regex(/^\\d{4}$/).valid('0200'), //, only check for version 0200\n  Coding: Joi.string().regex(/^1$/),\n});\n\nexport const vCcyAmt = Joi.object({\n  Amt: Joi.string().regex(/^\\d+\\.\\d{2}$/),\n  Ccy: Joi.string().regex(/^[A-Z]{3}$/)\n});\n\nexport const vRmtInf = Joi.object({\n  AddInf: Joi.object({\n    SrdBkgInfo: Joi.string().optional(),\n    Trailer: Joi.string().valid('EPD'),\n    Ustrd: Joi.string().optional()\n  }),\n  Ref: Joi.string().optional(),\n  Tp: Joi.string().valid('QRR')\n});\n\nexport const vAltPmtInf = Joi.object({\n  AltPmt1: Joi.string().optional(),\n  AltPmt2: Joi.string().optional()\n});\n\nexport const sampleJson = Joi.object({\n  Header: vHeader,\n  CdtrInf: vCdtrInf,\n  CcyAmt: vCcyAmt,\n  UltmtDtr: sAddress.allow(null).optional(),\n  UltmtCdtr: sAddress.allow(null).optional(),\n  RmtInf: vRmtInf,\n  AltPmtInf: vAltPmtInf\n});\n\nexport const validate = (schema, o) => {\n  //console.log(o)\n  const s = schema.validate(o, { presence: 'required'})\n  console.log(s)\n  return s.error === null;\n}\n","export const Header = {\n  QRType: 'SPC', // swiss payment code\n  Version: '0200', \n  Coding: '1'\n};\n\nexport const createJson = (CdtrInf, CcyAmt, RmtInf, UltmtDtr = undefined, UltmtCdtr = undefined, AltPmtInf = undefined) => {\n  return {\n    Header,\n    CdtrInf,\n    CcyAmt,\n    RmtInf,\n    UltmtCdtr,\n    UltmtDtr,\n    AltPmtInf\n  };\n}\n\nexport const addressToBreakSepFormat = a => {\n  const addressLabels = ['AdrTp', 'Name', 'StrNameOrAdrLine1', 'StrNameOrAdrLine2', 'PstCd', 'TmwNm', 'Ctry'];\n\n  if (!a || a === null) {\n    return addressLabels.map(_ => '');\n  }\n\n  return addressLabels.map(k => a[k]);\n}\n\nexport const jsonToBreakSepFormat = j => {\n  const Header = ['QRType', 'Version', 'Coding'].map(k => j['Header'][k]);\n  const iban = j['CdtrInf']['IBAN'];\n  const Cdtr = addressToBreakSepFormat(j['CdtrInf']['Cdtr']);\n  const UltmtCdtr = addressToBreakSepFormat(j['UltmtCdtr']);\n  const UltmtDtr = addressToBreakSepFormat(j['UltmtDtr']);\n  const CcyAmt = ['Amt', 'Ccy'].map(k => j['CcyAmt'][k]);\n  const RmtInf = ['Tp', 'Ref'].map(k => j['RmtInf'][k]);\n  const RmtInf2 = ['Ustrd', 'Trailer', 'SrdBkgInfo'].map(k => j['RmtInf']['AddInf'][k]);\n  const AltPmtInf = ['AltPmt1', 'AltPmt2'].map(k => j['AltPmtInf'][k]);\n\n  return Header.concat(iban).concat(Cdtr).concat(UltmtCdtr).concat(CcyAmt).concat(UltmtDtr).concat(RmtInf).concat(RmtInf2).concat(AltPmtInf);\n};\n\nexport const arrayToAddress = (t, idx = 0) => {\n  const r = {\n    AdrTp: t[idx],\n    Name: t[idx + 1],\n    StrNameOrAdrLine1: t[idx + 2],\n    StrNameOrAdrLine2: t[idx + 3],\n    PstCd: t[idx + 4],\n    TmwNm: t[idx + 5],\n    Ctry: t[idx + 6]\n  };\n\n  const checkIfNull = Object.keys(r).map(k => r[k] === '').reduce((a, b) => a && b);\n\n  if (checkIfNull === true) {\n    return  null;\n  }\n\n  return r;\n}\n\nexport const arrayToJson = t => {\n  const IBAN = t[3];\n  const Cdtr = arrayToAddress(t, 4);\n  const CdtrInf = { IBAN, Cdtr };\n  const UltmtCdtr = arrayToAddress(t, 11);\n  const UltmtDtr = arrayToAddress(t, 20);\n  const CcyAmt = {Ccy: t[19], Amt: t[18]};\n  const AddInf = {Ustrd: t[29], Trailer: t[30], SrdBkgInfo: t[31]};\n  const RmtInf = {Tp: t[27], Ref: t[28], AddInf};\n  const AltPmtInf = {AltPmt1: t[32], AltPmt2: t[33]};\n\n  return {\n    Header,\n    CdtrInf,\n    UltmtCdtr,\n    UltmtDtr,\n    CcyAmt,\n    RmtInf,\n    AltPmtInf\n  }\n}","import React, { Component } from 'react';\nimport QrReader from 'react-qr-reader';\n\nimport * as Validate from '../lib/validate';\nimport { Header, arrayToJson } from '../lib/convert';\n \nexport default class Test extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: true,\n      result: 'No result'\n    }\n  }\n \n  handleScan = data => {\n    if (data) {\n      const arr = data.split('\\n');\n      const j = arrayToJson(arr);\n\n      console.log(j)\n\n      if (Validate.validate(Validate.sampleJson, j)) {\n        this.setState({\n          result: j\n        });\n      } else {\n        this.setState({result: 'The QR Code read is not a valid Swiss QRBIll'});\n      }\n    }\n  }\n\n  handleError = err => {\n    console.error(err)\n  }\n\n  renderReader() {\n    if (this.state.show) {\n      return <QrReader\n        delay={300}\n        onError={this.handleError}\n        onScan={this.handleScan}\n        style={{ width: '300px' }}\n      />\n    };\n\n    return null;\n  }\n\n  toggleReader() {\n    const show = !this.state.show;\n    this.setState({show});\n\n  }\n\n  render() {\n    console.log(this.state.result)\n    return (\n      <div>\n        {this.renderReader()}\n        <pre>{JSON.stringify(this.state.result, null, 2)}</pre>\n        \n      </div>\n    )\n  }\n}","import React from 'react';\n\nimport QRCode from 'qrcode.react';\n\n// swiss qr code should be 46 x 46 mm and the cross 7 x 7 mmm in the middle\n\n// this is a quick wrapper around the qrcode generator for the generation f qqr code with JSON cntent\nfunction SwissQr(props) {\n  const { value } = props;\n\n  if (!Array.isArray(value) || value.length !== 34) {\n    return null;\n  }\n\n  const size = 300;\n\n  const config = {\n    fgColor: '#000000',\n    bgColor: '#ffffff',\n    level: 'M',\n    renderAs: 'svg',\n    includeMargin: false,\n  };\n\n  const radius = size/46*7;\n  const ratioCross = 1.1/5;\n\n  return <div className=\"svgHolder\" style={{position: 'relative'}}>\n    <QRCode\n      value={value.join('\\n')}\n      size={size}\n      fgColor={config.fgColor}\n      bgColor={config.bgColor}\n      level={config.level}\n      renderAs={config.renderAs}\n      includeMargin={config.includeMargin}\n    />\n    <svg style={{margin: '0 auto', position: 'absolute', top: (150-radius) + 'px', left: (150-radius) + 'px'}}>\n      <rect x={radius/2 - 1/10*radius} y={radius/2 - 1/10*radius} width={radius*1.2} height={radius*1.2} r={radius} fill=\"white\"/>\n      <rect x={radius/2} y={radius/2} width={radius} height={radius} r={radius} fill=\"black\"/>\n      <rect x={radius/2 + radius/2 - ratioCross/2*radius} y={radius/2 + ratioCross/2*radius} width={ratioCross*radius} height={(1-ratioCross)*radius} fill=\"white\"/>\n      <rect x={radius/2 + ratioCross/2*radius} y={radius/2 + radius/2 - ratioCross/2*radius} width={(1-ratioCross)*radius} height={ratioCross*radius} fill=\"white\"/>\n    </svg>\n  </div>;\n}\n\nexport default SwissQr;","// this is the example that is displayed on p. xx of the english guide\n// actually displays the labels in french\nexport const dataLabels = [\n  'QRType',\n  'Version',\n  'Coding Type',\n  'Compte (IBAN CRE)',\n  'Type d\\'adresse (CRE)',\n  'Nom (CRE)',\n  'Rue ou ligne d\\'adresse 1 (CRE)',\n  'Numéro de maison ou ligne d\\'adresse 2 (CRE)',\n  'Code postale (CRE)',\n  'Lieu (CRE)',\n  'Pays (CRE)',\n  'Type d\\'adresse (CREF)',\n  'Nom (CREF)',\n  'Rue ou ligne d\\'adresse 1 (CREF)',\n  'Numéro de maison ou ligne d\\'adresse 2 (CREF)',\n  'Code postale (CREF)',\n  'Lieu (CREF)',\n  'Pays (CREF)',\n  'Montant',\n  'Monnaie',\n  'Type d\\'adresse (DEBF)',\n  'Nom (DEBF)',\n  'Rue ou ligne d\\'adresse 1 (DEBF)',\n  'Numéro de maison ou ligne d\\'adresse 2 (DEBF)',\n  'Code postale (DEBF)',\n  'Lieu (DEBF)',\n  'Pays (DEBF)',\n  'Type de référence',\n  'Référence',\n  'Communication non structurée',\n  'Trailer',\n  'Informations de facture',\n  'PA1 – Paramètres',\n  'PA2 – Paramètres'\n];\n\n// this is the example that is displayed on fig 14 p.39 of the english guide\n// sample\nexport const example = [\n  'SPC',\n  '0200',\n  '1',\n  'CH4431999123000889012',\n  'S',\n  'Robert Schneider AG',\n  'Rue du Lac',\n  '1268',\n  '2501',\n  'Biel',\n  'CH',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '1949.75',\n  'CHF',\n  'S',\n  'Pia-Maria Rutschmann-Schnyder',\n  'Grosse Marktgasse',\n  '28',\n  '9400',\n  'Rorschach',\n  'CH',\n  'QRR',\n  '210000000003139471430009017',\n  'Order of 15 June 2020',\n  'EPD',\n  '//S1/10/10201409/11/200701/20/140.000-53/30/102673831/31/200615/32/7.7/33/7.7:139.40/40/0:30',\n  'Name AV1: UV;UltraPay005;12345',\n  'Name AV2: XY;XYService;54321'\n];","import React from 'react';\n\nimport QR from '../lib/qr';\nimport { example, dataLabels } from '../lib/data-examples';\n\n// swiss qr code should be 46 x 46 mm and the cross 7 x 7 mmm in the middle\n\n// this is a quick wrapper around the qrcode generator for the generation f qqr code with JSON cntent\nfunction SwissQr(props) {\n  const { value } = props;\n\n  return <div className=\"row\">\n    <div className=\"col-md-6\">\n      <h3> Generated Swiss QR</h3>\n      <QR value={value}/>\n    </div>\n    <div className=\"col-md-6\">\n      <h3>QR Content (as an array)</h3>\n      <pre>{JSON.stringify(value, null, 2)}</pre>\n    </div>\n  </div>;\n}\n\nexport default SwissQr;","import React from 'react';\nimport {\n  Switch,\n  Route,\n  withRouter,\n  Link,\n} from 'react-router-dom';\n\nimport Layout from './layout';\n\nimport Convert from './ui/convert';\nimport Validate from './ui/validate';\nimport QrReader from './ui/qr-reader';\nimport QrWriter from './ui/qr-writer';\n\nimport { dataLabels } from './lib/data-examples';\n\nconst NotFound = () => <p>Page Not Found</p>;\nconst Main = () => (<div>\n  <p>here you can play with different tools to understand the Swiss QR Bill</p>\n  <p><b><Link to=\"/qr/read\">Click here</Link> if you would like to read a Swiss QR Code</b></p>\n\n  <p>See all options in the menu</p>\n\n  <p>Do you need help with the transition to the new QR Bill and in general ISO20001? Please get in touch at <a href=\"info@nexys.ch\">info [@] nexys.ch</a></p>\n\n</div>);\n\nfunction Router(props) {\n  return (<Layout>\n    <Switch>\n      <Route path=\"/qr/read\" component={QrReader} props={props} />\n      <Route path=\"/qr/write\" component={() => <QrWriter value={dataLabels}/>} props={props} />\n      <Route path=\"/convert\" component={Convert} props={props} />\n      <Route path=\"/validate\" component={Validate} props={props} />\n      <Route exact path=\"/\" component={Main} />\n      <Route path=\"/\" component={NotFound} />\n    </Switch>\n  </Layout>);\n}\n\nexport default withRouter(Router);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Router } from 'react-router-dom';\nimport * as History from 'history';\n\nimport RouterApp from './router';\nimport * as serviceWorker from './serviceWorker';\n\nconst history = History.createBrowserHistory();\n\nReactDOM.render(<Router history={history}><RouterApp/></Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}